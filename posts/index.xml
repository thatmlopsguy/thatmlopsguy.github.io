<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on That MLOps Guy</title><link>https://thatmlopsguy.github.io/posts/</link><description>Recent content in Posts on That MLOps Guy</description><generator>Hugo</generator><language>en</language><copyright>That MLOps Guy</copyright><lastBuildDate>Tue, 21 May 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://thatmlopsguy.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>I replaced Homebrew and asdf with Devbox</title><link>https://thatmlopsguy.github.io/posts/devbox/</link><pubDate>Tue, 21 May 2024 00:00:00 +0000</pubDate><guid>https://thatmlopsguy.github.io/posts/devbox/</guid><description>In the last years, I used a combination of homebrew and asdf to manage some developer tools (eg. terraform, hadolint, ShellCheck, &amp;hellip;)
Recently I discovered devbox, a wrapper around NixOS package manager.
First install Devbox:
curl -fsSL https://get.jetify.com/devbox | bash Now, everytime I initialize a new project, instead of installing asdf plugins and declare it on .tool-versions, I just add the dependencies on devbox.json on the root of each project. First I run</description></item><item><title>Setup SSH keys from multiple Git accounts</title><link>https://thatmlopsguy.github.io/posts/multiple-git-servers/</link><pubDate>Wed, 15 May 2024 00:00:00 +0000</pubDate><guid>https://thatmlopsguy.github.io/posts/multiple-git-servers/</guid><description>I generally create new SSH keys for each separate git server using the following setup:
ssh-keygen -t ed25519 -a 100 Unfortunately, Git doesn&amp;rsquo;t provide an option for what keys to use, you have to configure this in the ~/.ssh/config file:
# Personal account Host github.com HostName ssh.github.com IdentityFile ~/.ssh/id_ed25519_github User git # Company account Host gitcompany Hostname ssh.github.com User git IdentityFile ~/.ssh/id_ed25519_github_company Host private.git.server.com PreferredAuthentications publickey IdentityFile ~/.ssh/key_file_for_this Starting from git version 2.</description></item><item><title>Manage dotfiles with GNU Stow</title><link>https://thatmlopsguy.github.io/posts/gnu-stow/</link><pubDate>Sun, 05 May 2024 00:00:00 +0000</pubDate><guid>https://thatmlopsguy.github.io/posts/gnu-stow/</guid><description>I use GNU stow to manage all the important dotfiles.
Instructions Create a repo called dotfiles in your $HOME directory Recreate the directory structure for the files you want to manage as subdir(s) of that directory. mkdir -p ~/.dotfiles/bash mv ~/.bashrc ~/.bash_logout ~/.dotfiles/bash cd ~/.dotfiles stow bash Stow will create symlink for each file.
.bashrc -&amp;gt; dotfiles/bash/.bashrc DonÂ´t forget to add this file to your git repo. Commit and push to remote and your done.</description></item><item><title>Hello World</title><link>https://thatmlopsguy.github.io/posts/hello-world/</link><pubDate>Sat, 04 May 2024 00:00:00 +0000</pubDate><guid>https://thatmlopsguy.github.io/posts/hello-world/</guid><description>I&amp;rsquo;m a python developer by trade, so let&amp;rsquo;s say hello in python!
print(&amp;#34;Hello World&amp;#34;) This blog will be my little space of the internet where I can share what I feel I want to.
I&amp;rsquo;ll mostly write about tech stuff, but I won&amp;rsquo;t shut the door to any other subjects.
Any feedback is highly appreciated!
This concludes my first post of #100DaysToOffload.</description></item></channel></rss>